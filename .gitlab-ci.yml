stages:
  - build
  - package
  - deploy

build-front:
  stage: build
  image: node:lts-alpine
  script:
    - cd front
    - npm ci
    - npm run build --production
  artifacts:
    paths:
      - ./front/dist
  only:
    - master
    - branches

build-back:
  stage: build
  image: node:lts-alpine
  script:
    - cd back
    - npm ci
    - npm run build
    - npm run check-archi
  artifacts:
    paths:
      - ./back/dist
  only:
    - master
    - branches

package-back:
  stage: package
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
    REPOSITORY_URL: "677222137584.dkr.ecr.eu-west-3.amazonaws.com/desk-booking:latest"
  script:
    - apk add --no-cache curl jq python3 py-pip
    - pip install awscli
    - cd back
    - aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin 677222137584.dkr.ecr.eu-west-3.amazonaws.com
    - docker build --build-arg COMMIT_SHA=$CI_COMMIT_SHORT_SHA -t $REPOSITORY_URL .
    - docker push $REPOSITORY_URL
  only:
    - master

deploy_staging:
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  stage: deploy
  variables:
    BUCKET_NAME: "bookadesk-staging.talan.com"
    AWS_DEFAULT_REGION: "eu-west-3"
  script:
    # Force updating the ECS service to start a new task with the new image pushed in the ECR repository during the build-back job
    - aws ecs update-service --cluster default --service desk-booking-staging --force-new-deployment --region eu-west-3
    # Push the frontend static files to the S3 bucket
    - aws s3 cp ./front/dist s3://${BUCKET_NAME} --recursive
  environment:
    name: Staging
    url: http://${BUCKET_NAME}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com
  only:
    - master

deploy_prod:
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  stage: deploy
  variables:
    BUCKET_NAME: "bookadesk.talan.com"
    AWS_DEFAULT_REGION: "eu-west-3"
  script:
    # Force updating the ECS service to start a new task with the new image pushed in the ECR repository during the build-back job
    - aws ecs update-service --cluster default --service desk-booking --force-new-deployment --region eu-west-3
    # Push the frontend static files to the S3 bucket
    - aws s3 cp ./front/dist s3://${BUCKET_NAME} --recursive
  environment:
    name: Prod
    url: http://${BUCKET_NAME}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com
  when: manual
  only:
    - master